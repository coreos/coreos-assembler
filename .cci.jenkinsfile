// Documentation: https://github.com/coreos/coreos-ci/blob/master/README-upstream-ci.md

pod(image: 'registry.fedoraproject.org/fedora:31', runAsUser: 0, kvm: true, memory: "9Gi") {
      checkout scm

      stage("Build") {
          shwrap("""
            dnf install -y git
            git submodule update --init
            ./build.sh
          """)
      }

      stage("Test") {
          parallel check: {
              shwrap("""
                make check
                make unittest
              """)
          },
          build: {
              shwrap("chown builder: /srv")
              // just split into separate invocations to make it easier to see where it fails
              cosa_cmd("init https://github.com/coreos/fedora-coreos-config")
              cosa_cmd("fetch --strict")
              cosa_cmd("build --strict")
          }
          parallel kola: {
              try {
                cosa_cmd("kola --basic-qemu-scenarios")
                cosa_cmd("kola run --parallel 8")
                cosa_cmd("kola --upgrades")
              } finally {
                shwrap("cd /srv && tar -cf - tmp/kola/ | xz -c9 > ${env.WORKSPACE}/kola.tar.xz")
                archiveArtifacts allowEmptyArchive: true, artifacts: 'kola.tar.xz'
              }
              // sanity check kola actually ran and dumped its output in tmp/
              shwrap("test -d /srv/tmp/kola")
          },
          buildextend: {
              cosa_cmd("buildextend-metal")
              cosa_cmd("buildextend-metal4k")
              cosa_cmd("buildextend-live")
              cosa_cmd("buildextend-openstack")
              cosa_cmd("buildextend-vmware")
              cosa_cmd("compress")
              // quick schema validation"
              cosa_cmd("meta --get name")
              cosa_cmd("buildupload --dry-run s3 --acl=public-read my-nonexistent-bucket/my/prefix")
          }
      }

      stage("Image tests") {
        shwrap("cd /srv && env TMPDIR=\$(pwd)/tmp/ kola testiso -S")
        // and again this time with the 4k image
        shwrap("cd /srv && env TMPDIR=\$(pwd)/tmp/ kola testiso -S --qemu-native-4k --no-pxe")
      }

      // Needs to be last because it's destructive
      stage("CLI/build tests") {
        shwrap("cd /srv && sudo -u builder ${env.WORKSPACE}/tests/test_pruning.sh")
      }
}

def cosa_cmd(args) {
    shwrap("cd /srv && sudo -u builder cosa ${args}")
}
