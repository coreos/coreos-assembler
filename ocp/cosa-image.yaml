# In this file, you will find the following:
#   - ImageStream configs for importing Fedora images
#   - ImageStream configs for importing coreos-assembler images
#   - BuildConfig defining how coreos-assembler:master is built
#   - BuildConfig defining how coreos-assembler:buildconfig is built
#
# To use this file, you would do something like the following:
#   $ oc apply -f cosa-image.yaml
#
# It is possible to provide parameters used by the BuildConfig, e.g.:
#   $ oc process -f cosa-image.yaml --param=REPO_REF=foo \
#                                   --param=NAMESPACE=bar | \
#     oc apply -f -
#
apiVersion: v1
kind: Template
labels:
  app: cosa
  template: cosa-template
metadata:
  annotations:
    description: CoreOS Assembler Images
    openshift.io/display-name: CoreOS Assembler
    tags: cosa,coreos-assembler
  name: cosa-images

parameters:
  - description: Git source URI
    name: REPO_URL
    value: "https://github.com/coreos/coreos-assembler"
  - description: Git branch/tag reference
    name: REPO_REF
    value: "master"
  - description: Name of the image; use e.g. joe-cosa for your own build
    name: IMAGE
    value: coreos-assembler

objects:

  ### Fedora Caching ###
  # keep a local copy of Fedora, since its use to build our Docker Images
  - apiVersion: "image.openshift.io/v1"
    kind: ImageStream
    metadata:
      name: fedora
      labels:
        app: cosa
        template: cosa-template
    spec:
      failedBuildHistoryLimit: 1
      successfulBuildsHistoryLimit: 1
      lookupPolicy:
        # this allows e.g. the pipeline to directly reference the imagestream
        local: true
      tags:
      - from:
          kind: DockerImage
          name: 'registry.fedoraproject.org/fedora:32'
        name: '32'
        referencePolicy:
          type: Source
        importPolicy:
          scheduled: true

  ### COREOS-ASSEMBLER Import Stream
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: ${IMAGE}
    spec:
      lookupPolicy:
        local: true
      failedBuildHistoryLimit: 1
      successfulBuildsHistoryLimit: 1
      lookupPolicy:
        local: true
      tags:
        # import the `master` image just in-case
        - name: master
          from:
            kind: DockerImage
            name: quay.io/coreos-assembler/coreos-assembler:${REPO_REF}
          importPolicy:
            scheduled: true

  ### BuildConfig Master
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${IMAGE}
      name: ${IMAGE}-bc
    spec:
      # kill the build after 3hrs
      completionDeadlineSeconds: 13200
      lookupPolicy:
        local: true
      output:
        to:
          kind: ImageStreamTag
          name: ${IMAGE}:buildconfig-${REPO_REF}
      postCommit: {}
      runPolicy: Serial
      source:
        git:
          ref: "${REPO_REF}"
          uri: "${REPO_URL}"
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: ocp/Dockerfile.buildconfig
          env:
              - name: GIT_URL
                value: "${REPO_URL}"
              - name: GIT_REF
                value: "${REPO_REF}"
              - name: OPENSHIFT_GIT_HACK
                value: "TRUE"
          from:
            kind: ImageStreamTag
            name: ${IMAGE}:${REPO_REF}
        dockerfilePath: ocp/Dockerfile.buildconfig
        type: Docker
      triggers:
        - type: ConfigChange
        - type: "ImageChange"
          imageChange:
              from:
                kind: "ImageStreamTag"
                name: ${IMAGE}:${REPO_REF}
