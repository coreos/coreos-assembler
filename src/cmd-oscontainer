#!/usr/bin/env bash
set -eou pipefail

dn=$(dirname "$0")
# shellcheck source=src/cmdlib.sh
. "${dn}"/cmdlib.sh

prepare_build

osc="${dn}/oscontainer.py"

print_help() {
    "${osc}" --help
}

if [ "$#" -eq 0 ]; then
    print_help
    exit 1
fi

if has_privileges; then
    # Deal with nested containerization
    if [ -n "${container:-}" ] && test "$(id -u)" != 0; then
        exec buildah unshare "${osc}" "$@"
    fi
    exec "${osc}" "$@"
else
    info "Required privileges not detected; running via supermin appliance"
    if [ -f ~/.docker/config.json ]; then
        info "Using ~/.docker/config.json"
        cp ~/.docker/config.json "${workdir}/tmp/docker-auth.json"
    else
        info "warning: No ~/.docker/config.json found, push will likely fail"
    fi
    # we use the cache qcow2 here so that e.g. we cache the base image, and also
    # so that buildah has a nice filesystem with space to work with instead of
    # the tiny supermin ext2 root
    runvm -- env PYTHONUNBUFFERED=1 "${osc}" --authfile="${workdir}/tmp/docker-auth.json" --workdir "${workdir}/cache/oscontainer-work" "$@"
fi
