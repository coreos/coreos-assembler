#!/usr/bin/env bash
set -euo pipefail

dn=$(dirname "$0")
# shellcheck source=src/cmdlib.sh
. "${dn}"/cmdlib.sh
# shellcheck source=src/libguestfish.sh
. "${dn}"/libguestfish.sh

# Usage: gf-platformid <input image> <output image> PLATFORMID
# Example: gf-platformid fedora-coreos.qcow2 fedora-coreos-aws.qcow2 aws
#
# This will add ignition.platform.id=aws to the bootloader arguments. Intended to
# be used for Ignition. It's much faster to do this than generate a fresh image
# for each provider (and also helps ensure the images are otherwise identical).

src="$1"
dest="$2"
platformid="$3"

if [[ $src == *.gz || $src == *.xz ]]; then
    img="$(basename "$src")"
    fatal "Cannot change ignition.platform.id on $img; not an uncompressed image"
fi

set -x
# Work in a tmpdir on the destination so that we don't inherit some MCS labeling
# from the /tmp dir in the container. This also ensures that the final move is a
# pure `rename()`.
# See also:
# https://github.com/coreos/coreos-assembler/issues/292
# https://github.com/coreos/coreos-assembler/pull/394
tmpd=$(mktemp -tdp "$(dirname "${dest}")" gf-platformid.XXXXXX)
tmp_dest=${tmpd}/box.img

cp --reflink=auto "${src}" "${tmp_dest}"
# <walters> I commonly chmod a-w VM images
chmod u+w "${tmp_dest}"

coreos_gf_run_mount "${tmp_dest}"

# Inject PLATFORM label in BLS config (for subsequent config regeneration)
blscfg_path=$(coreos_gf glob-expand /boot/loader/entries/ostree-*.conf)
coreos_gf download "${blscfg_path}" "${tmpd}"/bls.conf
# Remove any platformid currently there
sed -i -e 's, ignition.platform.id=[a-zA-Z0-9]*,,g' "${tmpd}"/bls.conf
sed -i -e 's,^\(options .*\),\1 ignition.platform.id='"${platformid}"',' "${tmpd}"/bls.conf
coreos_gf upload "${tmpd}"/bls.conf "${blscfg_path}"

coreos_gf_shutdown

mv "${tmp_dest}" "${dest}"
rm "${tmpd}" -rf
