#!/usr/bin/env bash
set -euo pipefail

dn=$(dirname "$0")
# shellcheck source=src/cmdlib.sh
. "${dn}"/cmdlib.sh

print_help() {
    cat 1>&2 <<'EOF'
Usage: coreos-assembler clean --help
       coreos-assembler clean [--all]

  Delete all build artifacts.  Use --all to also clean the cache/ directory.
EOF
}

rc=0
all=0
options=$(getopt --options ah --longoptions all,help -- "$@") || rc=$?
[ $rc -eq 0 ] || {
    print_help
    exit 1
}
eval set -- "$options"
while true; do
    case "$1" in
        -h | --help)
            print_help
            exit 0
            ;;
        -a | --all)
            all=1
            ;;
        --)
            shift
            break
            ;;
        *)
            fatal "$0: unrecognized option: $1"
            exit 1
            ;;
    esac
    shift
done

if [ $# -ne 0 ]; then
    print_help
    fatal "ERROR: Too many arguments"
    exit 1
fi

set -x
# This has some useful sanity checks
prepare_build

# But go back to the toplevel
cd "${workdir:?}"
# We don't clean the cache by default.
if test "${all}" = "1"; then
    if has_privileges; then
        sudo rm -rf cache/*
    else
        rm -rf cache/*
    fi
else
    echo "Note: retaining cache/"
fi
rm -rf builds/* tmp/*
