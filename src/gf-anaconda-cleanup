#!/usr/bin/env bash
# This runs after virt-install to undo things leftover from Anaconda.
set -euo pipefail

dn=$(dirname "$0")
# shellcheck source=src/cmdlib.sh
. "${dn}"/cmdlib.sh
# shellcheck source=src/libguestfish.sh
. "${dn}"/libguestfish.sh

src="$1"
shift

set -x
coreos_gf_run "${src}"
# We don't have a way to do this with Anaconda/kickstart right now.
# This bootstraps us to be able to do all of the mounts.
coreos_gf set-label /dev/sda2 boot
coreos_gf_run_mount "${src}"

fb=/boot/ignition.firstboot
exists=$(coreos_gf exists "${fb}")
if [ "${exists}" = false ]; then
    cat << EOF
---------
  error: Couldn't find ${fb} - most likely Anaconda failed."
  error: If 9pfs is available, you can find logs in: tmp/build/tmp/anaconda"
---------
EOF
    exit 1
fi

# Remove most things written by anaconda in /etc, except
# for /etc/fstab mainly.
for x in "sysconfig/anaconda" "sysconfig/network" "hostname" "crypttab" "resolv.conf" "X11" "systemd/system/default.target" "shadow-"; do
    coreos_gf rm-rf "${deploydir}/etc/${x}"
done
for x in $(coreos_gf glob-expand "${deploydir}/etc/sysconfig/network-scripts/"'*'); do
    coreos_gf rm-rf "${x}"
done
for x in $(coreos_gf find "${deploydir}/etc/ostree/remotes.d/"); do
    e=$(coreos_gf exists "${deploydir}/usr/etc/${x}")
    if [ "${e}" = "true" ]; then
        continue
    fi
    coreos_gf rm "${deploydir}/etc/ostree/remotes.d/${x}"
done

# And blow away all of /var - we want systemd-tmpfiles to be
# canonical
coreos_gf glob rm-rf "${stateroot}/var/*"
# And finally, remove cruft from the *physical* root as nothing should be
# using those; Anaconda is creating them today.
for x in $(coreos_gf glob-expand '/*'); do
  case $x in
    /ostree/|/boot/) continue;;
    *) coreos_gf rm-rf "${x}"
  esac
done

coreos_gf_shutdown
