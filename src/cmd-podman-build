#!/bin/bash
set -euo pipefail

meta=builds/latest/$(arch)/meta.json
name=$(jq -r .name "${meta}")
version=$(jq -r '."ostree-version"' "${meta}")

# can't use `rpm-ostree --print-json | jq .` here because the manifest may have
# variables that need to be set
ocp_version=$(python3  < src/config/packages-openshift.yaml -c '
import yaml, sys
y = yaml.safe_load(sys.stdin)
print(y["metadata"]["ocp_version"])')

node_tag=localhost/${name}-${ocp_version}-${version}-node
extensions_tag=localhost/${name}-${ocp_version}-${version}-extensions

# If a user provides args then they just want us to print
# out what args to run `podman build` with and exit so they
# can run podman build themselves (most likely outside the
# COSA container).
if [ "${1:-}" == "--args" ]; then
    PRINT_ARGS_AND_EXIT=1
    shift
fi

target=${1:-}
case "${target}" in
  node)
    from=oci-archive:builds/latest/$(arch)/$(jq .images.ostree.path "$meta")
    containerfile="src/config/Containerfile"
    tag=${node_tag}
    ;;
  extensions)
    from=${node_tag}
    containerfile="src/config/extensions/Dockerfile"
    tag=${extensions_tag}
    ;;
  "") echo "Usage: $0 (node|extensions) [extra podman args...]" >&2; exit 1;;
esac
shift

echo > tmp/all.repo
if [ -d src/yumrepos ]; then
  cat src/yumrepos/*.repo >> tmp/all.repo
fi

if [ "${PRINT_ARGS_AND_EXIT:-}" == "1" ]; then
    cmd='echo'
else
    cmd='podman build'
    set -x
fi

$cmd --from "$from" \
  -t "${tag}" \
  -f "${containerfile}" \
  --secret id=yumrepos,src=tmp/all.repo \
  -v /etc/pki/ca-trust:/etc/pki/ca-trust:ro \
  --security-opt label=disable src/config "$@"
