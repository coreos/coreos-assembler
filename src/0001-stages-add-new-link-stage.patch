From f53b6e1c5a8f0c26ee4f92641274a8cdba4b1d5a Mon Sep 17 00:00:00 2001
From: jbtrystram <jbtrystram@redhat.com>
Date: Tue, 21 Oct 2025 13:13:57 +0200
Subject: [PATCH 1/2] stages: add new link stage

This introduces a new stage, `org.osbuild.ln`, for creating
links within the filesystem tree.

This takes a list of paths, each with a `target` and a `link_name`
parameters, inspired by the copy stage.

The target is a simple string because we want the link to be either
absolute or relative.
---
 stages/org.osbuild.ln           | 31 ++++++++++++++++
 stages/org.osbuild.ln.meta.json | 66 +++++++++++++++++++++++++++++++++
 2 files changed, 97 insertions(+)
 create mode 100755 stages/org.osbuild.ln
 create mode 100644 stages/org.osbuild.ln.meta.json

diff --git a/stages/org.osbuild.ln b/stages/org.osbuild.ln
new file mode 100755
index 00000000..8268685d
--- /dev/null
+++ b/stages/org.osbuild.ln
@@ -0,0 +1,31 @@
+#!/usr/bin/python3
+import os
+import sys
+
+import osbuild.api
+from osbuild.util import parsing
+
+
+def main(args, options):
+    items = options["paths"]
+
+    for path in items:
+        target = path["target"]
+        link_name = parsing.parse_location(path["link_name"], args)
+        symbolic = path.get("symbolic", False)
+
+        print(f"Linking '{link_name}' -> '{target}'")
+        if symbolic:
+            print(f"Creating symbolic link: '{link_name}' -> '{target}'")
+            os.symlink(target, link_name)
+        else:
+            print(f"Creating hard link: '{link_name}' -> '{target}'")
+            os.link(target, link_name)
+
+    return 0
+
+
+if __name__ == '__main__':
+    _args = osbuild.api.arguments()
+    r = main(_args, _args["options"])
+    sys.exit(r)
diff --git a/stages/org.osbuild.ln.meta.json b/stages/org.osbuild.ln.meta.json
new file mode 100644
index 00000000..81f297be
--- /dev/null
+++ b/stages/org.osbuild.ln.meta.json
@@ -0,0 +1,66 @@
+{
+  "summary": "Create links",
+  "description": [
+    "Creates links within the tree or mounts. The target and link_name are specified as URLs.",
+    "Only allows tree or mounts URLs."
+  ],
+  "schema_2": {
+    "options": {
+      "additionalProperties": false,
+      "required": [
+        "paths"
+      ],
+      "properties": {
+        "paths": {
+          "description": "Array of links to create.",
+          "type": "array",
+          "minItems": 1,
+          "items": {
+            "type": "object",
+            "additionalProperties": false,
+            "required": [
+              "target",
+              "link_name"
+            ],
+            "properties": {
+              "target": {
+                "type": "string",
+                "description": "The target for the link, relative or absolute"
+              },
+              "link_name": {
+                "oneOf": [
+                  {
+                    "type": "string",
+                    "description": "The link path, if in a mount",
+                    "pattern": "^mount://[^/]+/"
+                  },
+                  {
+                    "type": "string",
+                    "description": "The link path, if in a tree",
+                    "pattern": "^tree://"
+                  }
+                ]
+              },
+              "symbolic": {
+                "type": "boolean",
+                "description": "Use a symbolic link instead of hard-linking. Defaults to False.",
+                "default": false
+              }
+            }
+          }
+        }
+      }
+    },
+    "devices": {
+      "type": "object",
+      "additionalProperties": true
+    },
+    "mounts": {
+      "type": "array"
+    },
+    "inputs": {
+      "type": "object",
+      "additionalProperties": true
+    }
+  }
+}
-- 
2.51.0

