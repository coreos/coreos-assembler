#!/usr/bin/env bash
set -xeuo pipefail

dn=$(dirname $0)
. ${dn}/cmdlib.sh

if [ $# -ne 1 ] || [ $1 == -h ] || [ $1 == --help ]; then
    set +x
    cat 1>&2 <<'EOF'
Usage: coreos-assembler init GITCONFIG

  For example, you can use https://github.com/cgwalters/fedora-coreos-config
  as GITCONFIG, or fork it.  Another option useful for local development
  (if you're running a shell inside this container) is to pass a file path
  starting with `/` - a symlink to it will be created and then used directly."
EOF
    exit 1
fi

if [ -e src/config ]; then
    fatal "src/config already exists, refusing to proceed."
fi

source=$1; shift

preflight

sudo chown $USER: .

INSTALLER=https://download.fedoraproject.org/pub/fedora/linux/releases/28/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-28-1.1.iso
INSTALLER_CHECKSUM=https://download.fedoraproject.org/pub/fedora/linux/releases/28/Everything/x86_64/iso/Fedora-Everything-28-1.1-x86_64-CHECKSUM

# Initialize sources (git)
mkdir -p src
(cd src
 if ! test -e config; then
     case "${source}" in
         /*) ln -sr "${source}" config;;
         *) git clone "${source}" config;;
     esac
     manifest=config/manifest.yaml
     if ! [ -f "${manifest}" ]; then
         echo 1>&2 "Failed to find src/${manifest}"
         fatal "If using a custom configuration, be sure it has a manifest.yaml."
     fi
 fi)

mkdir -p installer
(cd installer
 installer_bn=$(basename ${INSTALLER})
 if ! [ -f "${installer_bn}" ]; then
     mkdir -p tmp
     cd tmp
     curl -L --remote-name-all ${INSTALLER} ${INSTALLER_CHECKSUM}
     checksums_bn=$(basename ${INSTALLER_CHECKSUM})
     sha256sum -c ${checksums_bn}
     mv ${installer_bn} ${checksums_bn} ..
     cd ..
     rm tmp -rf
 fi
)

mkdir -p cache
mkdir -p builds
ostree --repo=repo init --mode=archive
ostree --repo=repo-build init --mode=bare-user
