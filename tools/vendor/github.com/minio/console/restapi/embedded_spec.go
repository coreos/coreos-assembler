// Code generated by go-swagger; DO NOT EDIT.

// This file is part of MinIO Console Server
// Copyright (c) 2021 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "ws"
  ],
  "swagger": "2.0",
  "info": {
    "title": "MinIO Console Server",
    "version": "0.1.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/account/change-password": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Change password of currently logged in user.",
        "operationId": "AccountChangePassword",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/account/change-user-password": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Change password of currently logged in user.",
        "operationId": "ChangeUserPassword",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/changeUserPasswordRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Password successfully changed."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/arns": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns a list of active ARNs in the instance",
        "operationId": "ArnList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arnsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/info": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns information about the deployment",
        "operationId": "AdminInfo",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "name": "defaultOnly",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminInfoResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/info/widgets/{widgetId}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns information about the deployment",
        "operationId": "DashboardWidgetDetails",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "widgetId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "start",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "end",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/widgetDetails"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/notification_endpoints": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns a list of active notification endpoints",
        "operationId": "NotificationEndpointList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notifEndpointResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Allows to configure a new notification endpoint",
        "operationId": "AddNotificationEndpoint",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationEndpoint"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/setNotificationEndpointResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/tiers": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns a list of tiers for ilm",
        "operationId": "TiersList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tierListResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Allows to configure a new tier",
        "operationId": "AddTier",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tier"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/tiers/{type}/{name}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Get Tier",
        "operationId": "GetTier",
        "parameters": [
          {
            "enum": [
              "s3",
              "gcs",
              "azure"
            ],
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tier"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/tiers/{type}/{name}/credentials": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Edit Tier Credentials",
        "operationId": "EditTierCredentials",
        "parameters": [
          {
            "enum": [
              "s3",
              "gcs",
              "azure"
            ],
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tierCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/bucket-policy/{bucket}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Policies With Given Bucket",
        "operationId": "ListPoliciesWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listPoliciesResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/bucket-users/{bucket}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Users With Access to a Given Bucket",
        "operationId": "ListUsersWithAccessToBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/bucket/{bucket}/access-rules": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Access Rules With Given Bucket",
        "operationId": "ListAccessRulesWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listAccessRulesResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add Access Rule To Given Bucket",
        "operationId": "SetAccessRuleWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "name": "prefixaccess",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/prefixAccessPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Delete Access Rule From Given Bucket",
        "operationId": "DeleteAccessRuleWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "name": "prefix",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/prefixWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Buckets",
        "operationId": "ListBuckets",
        "parameters": [
          {
            "type": "string",
            "name": "sort_by",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Make bucket",
        "operationId": "MakeBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/makeBucketRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets-replication": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Sets Multi Bucket Replication in multiple Buckets",
        "operationId": "SetMultiBucketReplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/multiBucketReplication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/multiBucketResponseState"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/delete-objects": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Multiple Objects",
        "operationId": "DeleteMultipleObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "files",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/deleteFile"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/encryption/disable": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Disable bucket encryption.",
        "operationId": "DisableBucketEncryption",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/encryption/enable": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Enable bucket encryption.",
        "operationId": "EnableBucketEncryption",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bucketEncryptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/encryption/info": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get bucket encryption information.",
        "operationId": "GetBucketEncryptionInfo",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketEncryptionInfo"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/events": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Bucket Events",
        "operationId": "ListBucketEvents",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketEventsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Create Bucket Event",
        "operationId": "CreateBucketEvent",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bucketEventRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/events/{arn}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Bucket Event",
        "operationId": "DeleteBucketEvent",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "arn",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationDeleteRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/lifecycle": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Lifecycle",
        "operationId": "GetBucketLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketLifecycleResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Add Bucket Lifecycle",
        "operationId": "AddBucketLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addBucketLifecycle"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/lifecycle/{lifecycle_id}": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Update Lifecycle rule",
        "operationId": "UpdateBucketLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "lifecycle_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBucketLifecycle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/object-locking": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Returns the status of object locking support on the bucket",
        "operationId": "GetBucketObjectLockingStatus",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketObLockingResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Objects",
        "operationId": "ListObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_metadata",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listObjectsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Object",
        "operationId": "DeleteObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/download": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "UserAPI"
        ],
        "summary": "Download Object",
        "operationId": "Download Object",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "preview",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/legalhold": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Object's legalhold status",
        "operationId": "PutObjectLegalHold",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectLegalHoldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/restore": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Restore Object to a selected version",
        "operationId": "PutObjectRestore",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/retention": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Object's retention status",
        "operationId": "PutObjectRetention",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectRetentionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Object retention from an object",
        "operationId": "DeleteObjectRetention",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/share": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Shares an Object on a url",
        "operationId": "ShareObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "expires",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/tags": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Object's tags",
        "operationId": "PutObjectTags",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "UserAPI"
        ],
        "summary": "Uploads an Object.",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/replication": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Replication",
        "operationId": "GetBucketReplication",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketReplicationResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/replication/{rule_id}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Replication Rule Delete",
        "operationId": "DeleteBucketReplicationRule",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "rule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/retention": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get Bucket's retention config",
        "operationId": "GetBucketRetentionConfig",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/getBucketRetentionConfig"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Set Bucket's retention config",
        "operationId": "SetBucketRetentionConfig",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putBucketRetentionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/rewind/{date}": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get objects in a bucket for a rewind date",
        "operationId": "GetBucketRewind",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "date",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewindResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/tags": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Bucket's tags",
        "operationId": "PutBucketTags",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putBucketTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/versioning": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Versioning",
        "operationId": "GetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketVersioningResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Set Bucket Versioning",
        "operationId": "SetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketVersioning"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{name}": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Info",
        "operationId": "BucketInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Bucket",
        "operationId": "DeleteBucket",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{name}/quota": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get Bucket Quota",
        "operationId": "GetBucketQuota",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketQuota"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Quota",
        "operationId": "SetBucketQuota",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketQuota"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{name}/set-policy": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Set Policy",
        "operationId": "BucketSetPolicy",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/configs": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Configurations",
        "operationId": "ListConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listConfigResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/configs/{name}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Configuration info",
        "operationId": "ConfigInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/configuration"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Set Configuration",
        "operationId": "SetConfig",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/setConfigResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/group": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Group info",
        "operationId": "GroupInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/group"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Update Group Members or Status",
        "operationId": "UpdateGroup",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/group"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Remove group",
        "operationId": "RemoveGroup",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Groups",
        "operationId": "ListGroups",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listGroupsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add Group",
        "operationId": "AddGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/has-permission": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Checks whether the user can perform a series of actions",
        "operationId": "HasPermissionTo",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hasPermissionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hasPermissionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/list-external-buckets": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Lists an External list of buckets using custom credentials",
        "operationId": "ListExternalBuckets",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/listExternalBucketsParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "security": [],
        "tags": [
          "UserAPI"
        ],
        "summary": "Returns login strategy, form or sso.",
        "operationId": "LoginDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginDetails"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": [
          "UserAPI"
        ],
        "summary": "Login to Console",
        "operationId": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/login/oauth2/auth": {
      "post": {
        "security": [],
        "tags": [
          "UserAPI"
        ],
        "summary": "Identity Provider oauth2 callback endpoint.",
        "operationId": "LoginOauth2Auth",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginOauth2AuthRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Logout from Console.",
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/logs/search": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Search the logs",
        "operationId": "LogSearch",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter Parameters",
            "name": "fp",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "default": 10,
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "default": 0,
            "name": "pageNo",
            "in": "query"
          },
          {
            "enum": [
              "timeDesc",
              "timeAsc"
            ],
            "type": "string",
            "default": "timeDesc",
            "name": "order",
            "in": "query"
          },
          {
            "type": "string",
            "name": "timeStart",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/logSearchResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policies": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Policies",
        "operationId": "ListPolicies",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listPoliciesResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add Policy",
        "operationId": "AddPolicy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addPolicyRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/policy"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policies/{policy}/groups": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Groups for a Policy",
        "operationId": "ListGroupsForPolicy",
        "parameters": [
          {
            "type": "string",
            "name": "policy",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policies/{policy}/users": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Users for a Policy",
        "operationId": "ListUsersForPolicy",
        "parameters": [
          {
            "type": "string",
            "name": "policy",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policy": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Policy info",
        "operationId": "PolicyInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/policy"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Remove policy",
        "operationId": "RemovePolicy",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profiling/start": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Start recording profile data",
        "operationId": "ProfilingStart",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profilingStartRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/startProfilingList"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profiling/stop": {
      "post": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "AdminAPI"
        ],
        "summary": "Stop and download profile data",
        "operationId": "ProfilingStop",
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/remote-buckets": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Remote Buckets",
        "operationId": "ListRemoteBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listRemoteBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Add Remote Bucket",
        "operationId": "AddRemoteBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRemoteBucket"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/remote-buckets/{name}": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Remote Bucket Details",
        "operationId": "RemoteBucketDetails",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/remoteBucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/remote-buckets/{source-bucket-name}/{arn}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Remote Bucket",
        "operationId": "DeleteRemoteBucket",
        "parameters": [
          {
            "type": "string",
            "name": "source-bucket-name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "arn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service-account-credentials": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Create Service Account With Credentials",
        "operationId": "CreateServiceAccountCreds",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequestCreds"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service-accounts": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List User's Service Accounts",
        "operationId": "ListUserServiceAccounts",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccounts"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Create Service Account",
        "operationId": "CreateServiceAccount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service-accounts/{access_key}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Service Account",
        "operationId": "DeleteServiceAccount",
        "parameters": [
          {
            "type": "string",
            "name": "access_key",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service/restart": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Restart Service",
        "operationId": "RestartService",
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/session": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Endpoint to check if your session is still valid",
        "operationId": "SessionCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sessionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/set-policy": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Set policy",
        "operationId": "SetPolicy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setPolicyNameRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/set-policy-multi": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Set policy to multiple users/groups",
        "operationId": "SetPolicyMultiple",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setPolicyMultipleNameRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/subscription/info": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Subscription info",
        "operationId": "SubscriptionInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/license"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Get User Info",
        "operationId": "GetUserInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Update User Info",
        "operationId": "UpdateUserInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Remove user",
        "operationId": "RemoveUser",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/groups": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Update Groups for a user",
        "operationId": "UpdateUserGroups",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{name}/service-account-credentials": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Create Service Account for User With Credentials",
        "operationId": "CreateServiceAccountCredentials",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequestCreds"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{name}/service-accounts": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "returns a list of service accounts for a user",
        "operationId": "ListAUserServiceAccounts",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccounts"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Create Service Account for User",
        "operationId": "CreateAUserServiceAccount",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Users",
        "operationId": "ListUsers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listUsersResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add User",
        "operationId": "AddUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users-groups-bulk": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Bulk functionality to Add Users to Groups",
        "operationId": "BulkUpdateUsersGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulkUserGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "accessRule": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "accountChangePasswordRequest": {
      "type": "object",
      "required": [
        "current_secret_key",
        "new_secret_key"
      ],
      "properties": {
        "current_secret_key": {
          "type": "string"
        },
        "new_secret_key": {
          "type": "string"
        }
      }
    },
    "addBucketLifecycle": {
      "type": "object",
      "properties": {
        "disable": {
          "description": "Non required, toggle to disable or enable rule",
          "type": "boolean"
        },
        "expired_object_delete_marker": {
          "description": "Non required, toggle to disable or enable rule",
          "type": "boolean"
        },
        "expiry_date": {
          "description": "Required in case of expiry_days or transition fields are not set. it defines an expiry date for ILM",
          "type": "string"
        },
        "expiry_days": {
          "description": "Required in case of expiry_date or transition fields are not set. it defines an expiry days for ILM",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "noncurrentversion_expiration_days": {
          "description": "Non required, can be set in case of expiration is enabled",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "noncurrentversion_transition_days": {
          "description": "Non required, can be set in case of transition is enabled",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "noncurrentversion_transition_storage_class": {
          "description": "Non required, can be set in case of transition is enabled",
          "type": "string"
        },
        "prefix": {
          "description": "Non required field, it matches a prefix to perform ILM operations on it",
          "type": "string"
        },
        "storage_class": {
          "description": "Required only in case of transition is set. it refers to a tier",
          "type": "string"
        },
        "tags": {
          "description": "Non required field, tags to match ILM files",
          "type": "string"
        },
        "transition_date": {
          "description": "Required in case of transition_days or expiry fields are not set. it defines a transition date for ILM",
          "type": "string"
        },
        "transition_days": {
          "description": "Required in case of transition_date or expiry fields are not set. it defines a transition days for ILM",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "addBucketReplication": {
      "type": "object",
      "properties": {
        "arn": {
          "type": "string"
        },
        "destination_bucket": {
          "type": "string"
        }
      }
    },
    "addGroupRequest": {
      "type": "object",
      "required": [
        "group",
        "members"
      ],
      "properties": {
        "group": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "addPolicyRequest": {
      "type": "object",
      "required": [
        "name",
        "policy"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        }
      }
    },
    "addUserRequest": {
      "type": "object",
      "required": [
        "accessKey",
        "secretKey",
        "groups",
        "policies"
      ],
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "adminInfoResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "integer"
        },
        "objects": {
          "type": "integer"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverProperties"
          }
        },
        "usage": {
          "type": "integer"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widget"
          }
        }
      }
    },
    "arnsResponse": {
      "type": "object",
      "properties": {
        "arns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "bucket": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/bucketAccess"
        },
        "allowedActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creation_date": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "properties": {
            "locking": {
              "type": "boolean"
            },
            "quota": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "integer",
                  "format": "int64"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "fifo",
                    "hard"
                  ]
                }
              }
            },
            "replication": {
              "type": "boolean"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "versioning": {
              "type": "boolean"
            },
            "versioningSuspended": {
              "type": "boolean"
            }
          }
        },
        "manage": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 3
        },
        "objects": {
          "type": "integer",
          "format": "int64"
        },
        "rw_access": {
          "type": "object",
          "properties": {
            "read": {
              "type": "boolean"
            },
            "write": {
              "type": "boolean"
            }
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "bucketAccess": {
      "type": "string",
      "default": "PRIVATE",
      "enum": [
        "PRIVATE",
        "PUBLIC",
        "CUSTOM"
      ]
    },
    "bucketEncryptionInfo": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "kmsMasterKeyID": {
          "type": "string"
        }
      }
    },
    "bucketEncryptionRequest": {
      "type": "object",
      "properties": {
        "encType": {
          "$ref": "#/definitions/bucketEncryptionType"
        },
        "kmsKeyID": {
          "type": "string"
        }
      }
    },
    "bucketEncryptionType": {
      "type": "string",
      "default": "sse-s3",
      "enum": [
        "sse-s3",
        "sse-kms"
      ]
    },
    "bucketEventRequest": {
      "type": "object",
      "required": [
        "configuration"
      ],
      "properties": {
        "configuration": {
          "$ref": "#/definitions/notificationConfig"
        },
        "ignoreExisting": {
          "type": "boolean"
        }
      }
    },
    "bucketLifecycleResponse": {
      "type": "object",
      "properties": {
        "lifecycle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectBucketLifecycle"
          }
        }
      }
    },
    "bucketObLockingResponse": {
      "type": "object",
      "properties": {
        "object_locking_enabled": {
          "type": "boolean"
        }
      }
    },
    "bucketObject": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiration_rule_id": {
          "type": "string"
        },
        "is_delete_marker": {
          "type": "boolean"
        },
        "is_latest": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "legal_hold_status": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retention_mode": {
          "type": "string"
        },
        "retention_until_date": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "bucketQuota": {
      "type": "object",
      "properties": {
        "quota": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "hard",
            "fifo"
          ]
        }
      }
    },
    "bucketReplicationDestination": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        }
      }
    },
    "bucketReplicationResponse": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bucketReplicationRule"
          }
        }
      }
    },
    "bucketReplicationRule": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "type": "string"
        },
        "delete_marker_replication": {
          "type": "boolean"
        },
        "deletes_replication": {
          "type": "boolean"
        },
        "destination": {
          "$ref": "#/definitions/bucketReplicationDestination"
        },
        "healthCheckPeriod": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "metadata_replication": {
          "type": "boolean"
        },
        "prefix": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ]
        },
        "syncMode": {
          "type": "string",
          "default": "async",
          "enum": [
            "async",
            "sync"
          ]
        },
        "tags": {
          "type": "string"
        }
      }
    },
    "bucketVersioningResponse": {
      "type": "object",
      "properties": {
        "is_versioned": {
          "type": "boolean"
        }
      }
    },
    "bulkUserGroups": {
      "type": "object",
      "required": [
        "users",
        "groups"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "changeUserPasswordRequest": {
      "type": "object",
      "required": [
        "selectedUser",
        "newSecretKey"
      ],
      "properties": {
        "newSecretKey": {
          "type": "string"
        },
        "selectedUser": {
          "type": "string"
        }
      }
    },
    "configDescription": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "key_values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configurationKV"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "configurationKV": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "createRemoteBucket": {
      "required": [
        "accessKey",
        "secretKey",
        "targetURL",
        "sourceBucket",
        "targetBucket"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64"
        },
        "healthCheckPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "type": "string"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "sourceBucket": {
          "type": "string"
        },
        "syncMode": {
          "type": "string",
          "default": "async",
          "enum": [
            "async",
            "sync"
          ]
        },
        "targetBucket": {
          "type": "string"
        },
        "targetURL": {
          "type": "string"
        }
      }
    },
    "deleteFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "recursive": {
          "type": "boolean"
        },
        "versionID": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message",
        "detailedMessage"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "expirationResponse": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "days": {
          "type": "integer",
          "format": "int64"
        },
        "delete_marker": {
          "type": "boolean"
        }
      }
    },
    "getBucketRetentionConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        },
        "unit": {
          "$ref": "#/definitions/objectRetentionUnit"
        },
        "validity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "group": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "hasPermissionRequest": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/policyArgs"
          }
        }
      }
    },
    "hasPermissionResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/permissionAction"
          }
        }
      }
    },
    "iamEntity": {
      "type": "string",
      "pattern": "^[\\w+=,.@-]{1,64}$"
    },
    "iamPolicy": {
      "type": "object",
      "properties": {
        "statement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamPolicyStatement"
          }
        },
        "version": {
          "type": "string"
        }
      }
    },
    "iamPolicyStatement": {
      "type": "object",
      "properties": {
        "action": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "effect": {
          "type": "string"
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "license": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "expires_at": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "storage_capacity": {
          "type": "integer"
        }
      }
    },
    "lifecycleTag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "listAccessRulesResponse": {
      "type": "object",
      "properties": {
        "accessRules": {
          "type": "array",
          "title": "list of policies",
          "items": {
            "$ref": "#/definitions/accessRule"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of policies"
        }
      }
    },
    "listBucketEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/notificationConfig"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of bucket events"
        }
      }
    },
    "listBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "title": "list of resulting buckets",
          "items": {
            "$ref": "#/definitions/bucket"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of buckets accessible to the user"
        }
      }
    },
    "listConfigResponse": {
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configDescription"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of configurations"
        }
      }
    },
    "listExternalBucketsParams": {
      "required": [
        "accessKey",
        "secretKey",
        "targetURL",
        "useTLS"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "region": {
          "type": "string"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "targetURL": {
          "type": "string"
        },
        "useTLS": {
          "type": "boolean"
        }
      }
    },
    "listGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "title": "list of groups",
          "items": {
            "type": "string"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of groups"
        }
      }
    },
    "listObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "title": "list of resulting objects",
          "items": {
            "$ref": "#/definitions/bucketObject"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of objects"
        }
      }
    },
    "listPoliciesResponse": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "title": "list of policies",
          "items": {
            "$ref": "#/definitions/policy"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of policies"
        }
      }
    },
    "listRemoteBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "title": "list of remote buckets",
          "items": {
            "$ref": "#/definitions/remoteBucket"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of remote buckets accessible to user"
        }
      }
    },
    "listUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "title": "list of resulting users",
          "items": {
            "$ref": "#/definitions/user"
          }
        }
      }
    },
    "logSearchResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "object",
          "title": "list of log search responses"
        }
      }
    },
    "loginDetails": {
      "type": "object",
      "properties": {
        "loginStrategy": {
          "type": "string",
          "enum": [
            "form",
            "redirect",
            "service-account"
          ]
        },
        "redirect": {
          "type": "string"
        }
      }
    },
    "loginOauth2AuthRequest": {
      "type": "object",
      "required": [
        "state",
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "loginRequest": {
      "type": "object",
      "required": [
        "accessKey",
        "secretKey"
      ],
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      }
    },
    "makeBucketRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "locking": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "quota": {
          "$ref": "#/definitions/setBucketQuota"
        },
        "retention": {
          "$ref": "#/definitions/putBucketRetentionRequest"
        },
        "versioning": {
          "type": "boolean"
        }
      }
    },
    "multiBucketReplication": {
      "required": [
        "accessKey",
        "secretKey",
        "targetURL",
        "bucketsRelation"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64"
        },
        "bucketsRelation": {
          "type": "array",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/multiBucketsRelation"
          }
        },
        "healthCheckPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "replicateDeleteMarkers": {
          "type": "boolean"
        },
        "replicateDeletes": {
          "type": "boolean"
        },
        "replicateMetadata": {
          "type": "boolean"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "syncMode": {
          "type": "string",
          "default": "async",
          "enum": [
            "async",
            "sync"
          ]
        },
        "tags": {
          "type": "string"
        },
        "targetURL": {
          "type": "string"
        }
      }
    },
    "multiBucketResponseItem": {
      "type": "object",
      "properties": {
        "errorString": {
          "type": "string"
        },
        "originBucket": {
          "type": "string"
        },
        "targetBucket": {
          "type": "string"
        }
      }
    },
    "multiBucketResponseState": {
      "type": "object",
      "properties": {
        "replicationState": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/multiBucketResponseItem"
          }
        }
      }
    },
    "multiBucketsRelation": {
      "type": "object",
      "properties": {
        "destinationBucket": {
          "type": "string"
        },
        "originBucket": {
          "type": "string"
        }
      }
    },
    "nofiticationService": {
      "type": "string",
      "enum": [
        "webhook",
        "amqp",
        "kafka",
        "mqtt",
        "nats",
        "nsq",
        "mysql",
        "postgres",
        "elasticsearch",
        "redis"
      ]
    },
    "notifEndpointResponse": {
      "type": "object",
      "properties": {
        "notification_endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/notificationEndpointItem"
          }
        }
      }
    },
    "notificationConfig": {
      "type": "object",
      "required": [
        "arn"
      ],
      "properties": {
        "arn": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "title": "filter specific type of event. Defaults to all event (default: '[put,delete,get]')",
          "items": {
            "$ref": "#/definitions/notificationEventType"
          }
        },
        "id": {
          "type": "string"
        },
        "prefix": {
          "type": "string",
          "title": "filter event associated to the specified prefix"
        },
        "suffix": {
          "type": "string",
          "title": "filter event associated to the specified suffix"
        }
      }
    },
    "notificationDeleteRequest": {
      "type": "object",
      "required": [
        "events",
        "prefix",
        "suffix"
      ],
      "properties": {
        "events": {
          "type": "array",
          "title": "filter specific type of event. Defaults to all event (default: '[put,delete,get]')",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/notificationEventType"
          }
        },
        "prefix": {
          "type": "string",
          "title": "filter event associated to the specified prefix"
        },
        "suffix": {
          "type": "string",
          "title": "filter event associated to the specified suffix"
        }
      }
    },
    "notificationEndpoint": {
      "type": "object",
      "required": [
        "service",
        "account_id",
        "properties"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "service": {
          "$ref": "#/definitions/nofiticationService"
        }
      }
    },
    "notificationEndpointItem": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/nofiticationService"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "notificationEventType": {
      "type": "string",
      "enum": [
        "put",
        "delete",
        "get"
      ]
    },
    "objectBucketLifecycle": {
      "type": "object",
      "properties": {
        "expiration": {
          "$ref": "#/definitions/expirationResponse"
        },
        "id": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/lifecycleTag"
          }
        },
        "transition": {
          "$ref": "#/definitions/transitionResponse"
        }
      }
    },
    "objectLegalHoldStatus": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ]
    },
    "objectRetentionMode": {
      "type": "string",
      "enum": [
        "governance",
        "compliance"
      ]
    },
    "objectRetentionUnit": {
      "type": "string",
      "enum": [
        "days",
        "years"
      ]
    },
    "permissionAction": {
      "type": "object",
      "properties": {
        "can": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "policy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        }
      }
    },
    "policyArgs": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "bucket_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "policyEntity": {
      "type": "string",
      "default": "user",
      "enum": [
        "user",
        "group"
      ]
    },
    "prefixAccessPair": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "prefixWrapper": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "STSAccessKeyID": {
          "type": "string"
        },
        "STSSecretAccessKey": {
          "type": "string"
        },
        "STSSessionToken": {
          "type": "string"
        },
        "accountAccessKey": {
          "type": "string"
        }
      }
    },
    "profilerType": {
      "type": "string",
      "enum": [
        "cpu",
        "mem",
        "block",
        "mutex",
        "trace",
        "threads",
        "goroutines"
      ]
    },
    "profilingStartRequest": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/profilerType"
        }
      }
    },
    "putBucketRetentionRequest": {
      "type": "object",
      "required": [
        "mode",
        "unit",
        "validity"
      ],
      "properties": {
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        },
        "unit": {
          "$ref": "#/definitions/objectRetentionUnit"
        },
        "validity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "putBucketTagsRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "putObjectLegalHoldRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/objectLegalHoldStatus"
        }
      }
    },
    "putObjectRetentionRequest": {
      "type": "object",
      "required": [
        "mode",
        "expires"
      ],
      "properties": {
        "expires": {
          "type": "string"
        },
        "governance_bypass": {
          "type": "boolean"
        },
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        }
      }
    },
    "putObjectTagsRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "remoteBucket": {
      "type": "object",
      "required": [
        "accessKey",
        "sourceBucket",
        "remoteARN"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64"
        },
        "healthCheckPeriod": {
          "type": "integer"
        },
        "remoteARN": {
          "type": "string"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "service": {
          "type": "string",
          "enum": [
            "replication"
          ]
        },
        "sourceBucket": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "syncMode": {
          "type": "string"
        },
        "targetBucket": {
          "type": "string"
        },
        "targetURL": {
          "type": "string"
        }
      }
    },
    "resultTarget": {
      "type": "object",
      "properties": {
        "legendFormat": {
          "type": "string"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widgetResult"
          }
        },
        "resultType": {
          "type": "string"
        }
      }
    },
    "rewindItem": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "delete_flag": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "rewindResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewindItem"
          }
        }
      }
    },
    "serverDrives": {
      "type": "object",
      "properties": {
        "availableSpace": {
          "type": "integer"
        },
        "drivePath": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "healing": {
          "type": "boolean"
        },
        "model": {
          "type": "string"
        },
        "rootDisk": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer"
        },
        "usedSpace": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "serverProperties": {
      "type": "object",
      "properties": {
        "commitID": {
          "type": "string"
        },
        "drives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverDrives"
          }
        },
        "endpoint": {
          "type": "string"
        },
        "network": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "poolNumber": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "uptime": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "serviceAccountCreds": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "serviceAccountRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "type": "string",
          "title": "policy to be applied to the Service Account if any"
        }
      }
    },
    "serviceAccountRequestCreds": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "policy": {
          "type": "string",
          "title": "policy to be applied to the Service Account if any"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "serviceAccounts": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "sessionResponse": {
      "type": "object",
      "properties": {
        "distributedMode": {
          "type": "boolean"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "type": "boolean"
        },
        "pages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policy": {
          "type": "object",
          "$ref": "#/definitions/iamPolicy"
        },
        "status": {
          "type": "string",
          "enum": [
            "ok"
          ]
        }
      }
    },
    "setBucketPolicyRequest": {
      "type": "object",
      "required": [
        "access"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/bucketAccess"
        }
      }
    },
    "setBucketQuota": {
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "amount": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "quota_type": {
          "type": "string",
          "enum": [
            "fifo",
            "hard"
          ]
        }
      }
    },
    "setBucketVersioning": {
      "type": "object",
      "properties": {
        "versioning": {
          "type": "boolean"
        }
      }
    },
    "setConfigRequest": {
      "type": "object",
      "required": [
        "key_values"
      ],
      "properties": {
        "arn_resource_id": {
          "type": "string",
          "title": "Used if configuration is an event notification's target"
        },
        "key_values": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/configurationKV"
          }
        }
      }
    },
    "setConfigResponse": {
      "type": "object",
      "properties": {
        "restart": {
          "description": "Returns wheter server needs to restart to apply changes or not",
          "type": "boolean"
        }
      }
    },
    "setNotificationEndpointResponse": {
      "type": "object",
      "required": [
        "service",
        "account_id",
        "properties"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "restart": {
          "type": "boolean"
        },
        "service": {
          "$ref": "#/definitions/nofiticationService"
        }
      }
    },
    "setPolicyMultipleNameRequest": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEntity"
          }
        },
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEntity"
          }
        }
      }
    },
    "setPolicyNameRequest": {
      "type": "object",
      "required": [
        "name",
        "entityType",
        "entityName"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/policyEntity"
        },
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "setPolicyRequest": {
      "type": "object",
      "required": [
        "entityType",
        "entityName"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/policyEntity"
        }
      }
    },
    "startProfilingItem": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "startProfilingList": {
      "type": "object",
      "properties": {
        "startResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/startProfilingItem"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of start results"
        }
      }
    },
    "tier": {
      "type": "object",
      "properties": {
        "azure": {
          "type": "object",
          "$ref": "#/definitions/tier_azure"
        },
        "gcs": {
          "type": "object",
          "$ref": "#/definitions/tier_gcs"
        },
        "s3": {
          "type": "object",
          "$ref": "#/definitions/tier_s3"
        },
        "type": {
          "type": "string",
          "enum": [
            "s3",
            "gcs",
            "azure",
            "unsupported"
          ]
        }
      }
    },
    "tierCredentialsRequest": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string"
        },
        "creds": {
          "description": "a base64 encoded value",
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        }
      }
    },
    "tierListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tier"
          }
        }
      }
    },
    "tier_azure": {
      "type": "object",
      "properties": {
        "accountkey": {
          "type": "string"
        },
        "accountname": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "tier_gcs": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        },
        "creds": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "tier_s3": {
      "type": "object",
      "properties": {
        "accesskey": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "secretkey": {
          "type": "string"
        },
        "storageclass": {
          "type": "string"
        }
      }
    },
    "transitionResponse": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "days": {
          "type": "integer",
          "format": "int64"
        },
        "storage_class": {
          "type": "string"
        }
      }
    },
    "updateBucketLifecycle": {
      "type": "object",
      "properties": {
        "disable": {
          "type": "boolean"
        },
        "tags": {
          "type": "string"
        }
      }
    },
    "updateGroupRequest": {
      "type": "object",
      "required": [
        "members",
        "status"
      ],
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "updateUser": {
      "type": "object",
      "required": [
        "status",
        "groups"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "updateUserGroups": {
      "type": "object",
      "required": [
        "groups"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "hasPolicy": {
          "type": "boolean"
        },
        "memberOf": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policy": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "widget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "object",
          "properties": {
            "reduceOptions": {
              "type": "object",
              "properties": {
                "calcs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resultTarget"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "widgetDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "object",
          "properties": {
            "reduceOptions": {
              "type": "object",
              "properties": {
                "calcs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resultTarget"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "widgetResult": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {}
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "http://min.io",
      "tokenUrl": "http://min.io"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "ws"
  ],
  "swagger": "2.0",
  "info": {
    "title": "MinIO Console Server",
    "version": "0.1.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/account/change-password": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Change password of currently logged in user.",
        "operationId": "AccountChangePassword",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/account/change-user-password": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Change password of currently logged in user.",
        "operationId": "ChangeUserPassword",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/changeUserPasswordRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Password successfully changed."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/arns": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns a list of active ARNs in the instance",
        "operationId": "ArnList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arnsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/info": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns information about the deployment",
        "operationId": "AdminInfo",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "name": "defaultOnly",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminInfoResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/info/widgets/{widgetId}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns information about the deployment",
        "operationId": "DashboardWidgetDetails",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "widgetId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "start",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "end",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/widgetDetails"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/notification_endpoints": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns a list of active notification endpoints",
        "operationId": "NotificationEndpointList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notifEndpointResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Allows to configure a new notification endpoint",
        "operationId": "AddNotificationEndpoint",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationEndpoint"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/setNotificationEndpointResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/tiers": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Returns a list of tiers for ilm",
        "operationId": "TiersList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tierListResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Allows to configure a new tier",
        "operationId": "AddTier",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tier"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/tiers/{type}/{name}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Get Tier",
        "operationId": "GetTier",
        "parameters": [
          {
            "enum": [
              "s3",
              "gcs",
              "azure"
            ],
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tier"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/admin/tiers/{type}/{name}/credentials": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Edit Tier Credentials",
        "operationId": "EditTierCredentials",
        "parameters": [
          {
            "enum": [
              "s3",
              "gcs",
              "azure"
            ],
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tierCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/bucket-policy/{bucket}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Policies With Given Bucket",
        "operationId": "ListPoliciesWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listPoliciesResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/bucket-users/{bucket}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Users With Access to a Given Bucket",
        "operationId": "ListUsersWithAccessToBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/bucket/{bucket}/access-rules": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Access Rules With Given Bucket",
        "operationId": "ListAccessRulesWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listAccessRulesResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add Access Rule To Given Bucket",
        "operationId": "SetAccessRuleWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "name": "prefixaccess",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/prefixAccessPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Delete Access Rule From Given Bucket",
        "operationId": "DeleteAccessRuleWithBucket",
        "parameters": [
          {
            "type": "string",
            "name": "bucket",
            "in": "path",
            "required": true
          },
          {
            "name": "prefix",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/prefixWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Buckets",
        "operationId": "ListBuckets",
        "parameters": [
          {
            "type": "string",
            "name": "sort_by",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Make bucket",
        "operationId": "MakeBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/makeBucketRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets-replication": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Sets Multi Bucket Replication in multiple Buckets",
        "operationId": "SetMultiBucketReplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/multiBucketReplication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/multiBucketResponseState"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/delete-objects": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Multiple Objects",
        "operationId": "DeleteMultipleObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "files",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/deleteFile"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/encryption/disable": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Disable bucket encryption.",
        "operationId": "DisableBucketEncryption",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/encryption/enable": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Enable bucket encryption.",
        "operationId": "EnableBucketEncryption",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bucketEncryptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/encryption/info": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get bucket encryption information.",
        "operationId": "GetBucketEncryptionInfo",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketEncryptionInfo"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/events": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Bucket Events",
        "operationId": "ListBucketEvents",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketEventsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Create Bucket Event",
        "operationId": "CreateBucketEvent",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bucketEventRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/events/{arn}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Bucket Event",
        "operationId": "DeleteBucketEvent",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "arn",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationDeleteRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/lifecycle": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Lifecycle",
        "operationId": "GetBucketLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketLifecycleResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Add Bucket Lifecycle",
        "operationId": "AddBucketLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addBucketLifecycle"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/lifecycle/{lifecycle_id}": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Update Lifecycle rule",
        "operationId": "UpdateBucketLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "lifecycle_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBucketLifecycle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/object-locking": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Returns the status of object locking support on the bucket",
        "operationId": "GetBucketObjectLockingStatus",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketObLockingResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Objects",
        "operationId": "ListObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_metadata",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listObjectsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Object",
        "operationId": "DeleteObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/download": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "UserAPI"
        ],
        "summary": "Download Object",
        "operationId": "Download Object",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "preview",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/legalhold": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Object's legalhold status",
        "operationId": "PutObjectLegalHold",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectLegalHoldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/restore": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Restore Object to a selected version",
        "operationId": "PutObjectRestore",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/retention": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Object's retention status",
        "operationId": "PutObjectRetention",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectRetentionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Object retention from an object",
        "operationId": "DeleteObjectRetention",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/share": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Shares an Object on a url",
        "operationId": "ShareObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "expires",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/tags": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Object's tags",
        "operationId": "PutObjectTags",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "UserAPI"
        ],
        "summary": "Uploads an Object.",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/replication": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Replication",
        "operationId": "GetBucketReplication",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketReplicationResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/replication/{rule_id}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Replication Rule Delete",
        "operationId": "DeleteBucketReplicationRule",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "rule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/retention": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get Bucket's retention config",
        "operationId": "GetBucketRetentionConfig",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/getBucketRetentionConfig"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Set Bucket's retention config",
        "operationId": "SetBucketRetentionConfig",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putBucketRetentionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/rewind/{date}": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get objects in a bucket for a rewind date",
        "operationId": "GetBucketRewind",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "date",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewindResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/tags": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Put Bucket's tags",
        "operationId": "PutBucketTags",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putBucketTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/versioning": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Versioning",
        "operationId": "GetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketVersioningResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Set Bucket Versioning",
        "operationId": "SetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketVersioning"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{name}": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Info",
        "operationId": "BucketInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Bucket",
        "operationId": "DeleteBucket",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{name}/quota": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Get Bucket Quota",
        "operationId": "GetBucketQuota",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketQuota"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Quota",
        "operationId": "SetBucketQuota",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketQuota"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/buckets/{name}/set-policy": {
      "put": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Bucket Set Policy",
        "operationId": "BucketSetPolicy",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/configs": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Configurations",
        "operationId": "ListConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listConfigResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/configs/{name}": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Configuration info",
        "operationId": "ConfigInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/configuration"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Set Configuration",
        "operationId": "SetConfig",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/setConfigResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/group": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Group info",
        "operationId": "GroupInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/group"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Update Group Members or Status",
        "operationId": "UpdateGroup",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/group"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Remove group",
        "operationId": "RemoveGroup",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Groups",
        "operationId": "ListGroups",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listGroupsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add Group",
        "operationId": "AddGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/has-permission": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Checks whether the user can perform a series of actions",
        "operationId": "HasPermissionTo",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hasPermissionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hasPermissionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/list-external-buckets": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Lists an External list of buckets using custom credentials",
        "operationId": "ListExternalBuckets",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/listExternalBucketsParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "security": [],
        "tags": [
          "UserAPI"
        ],
        "summary": "Returns login strategy, form or sso.",
        "operationId": "LoginDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginDetails"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": [
          "UserAPI"
        ],
        "summary": "Login to Console",
        "operationId": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/login/oauth2/auth": {
      "post": {
        "security": [],
        "tags": [
          "UserAPI"
        ],
        "summary": "Identity Provider oauth2 callback endpoint.",
        "operationId": "LoginOauth2Auth",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginOauth2AuthRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Logout from Console.",
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/logs/search": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Search the logs",
        "operationId": "LogSearch",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter Parameters",
            "name": "fp",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "default": 10,
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "default": 0,
            "name": "pageNo",
            "in": "query"
          },
          {
            "enum": [
              "timeDesc",
              "timeAsc"
            ],
            "type": "string",
            "default": "timeDesc",
            "name": "order",
            "in": "query"
          },
          {
            "type": "string",
            "name": "timeStart",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/logSearchResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policies": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Policies",
        "operationId": "ListPolicies",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listPoliciesResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add Policy",
        "operationId": "AddPolicy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addPolicyRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/policy"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policies/{policy}/groups": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Groups for a Policy",
        "operationId": "ListGroupsForPolicy",
        "parameters": [
          {
            "type": "string",
            "name": "policy",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policies/{policy}/users": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Users for a Policy",
        "operationId": "ListUsersForPolicy",
        "parameters": [
          {
            "type": "string",
            "name": "policy",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/policy": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Policy info",
        "operationId": "PolicyInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/policy"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Remove policy",
        "operationId": "RemovePolicy",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profiling/start": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Start recording profile data",
        "operationId": "ProfilingStart",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profilingStartRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/startProfilingList"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profiling/stop": {
      "post": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "AdminAPI"
        ],
        "summary": "Stop and download profile data",
        "operationId": "ProfilingStop",
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/remote-buckets": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List Remote Buckets",
        "operationId": "ListRemoteBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listRemoteBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Add Remote Bucket",
        "operationId": "AddRemoteBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRemoteBucket"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/remote-buckets/{name}": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Remote Bucket Details",
        "operationId": "RemoteBucketDetails",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/remoteBucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/remote-buckets/{source-bucket-name}/{arn}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Remote Bucket",
        "operationId": "DeleteRemoteBucket",
        "parameters": [
          {
            "type": "string",
            "name": "source-bucket-name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "arn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service-account-credentials": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Create Service Account With Credentials",
        "operationId": "CreateServiceAccountCreds",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequestCreds"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service-accounts": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "List User's Service Accounts",
        "operationId": "ListUserServiceAccounts",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccounts"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Create Service Account",
        "operationId": "CreateServiceAccount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service-accounts/{access_key}": {
      "delete": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Delete Service Account",
        "operationId": "DeleteServiceAccount",
        "parameters": [
          {
            "type": "string",
            "name": "access_key",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/service/restart": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Restart Service",
        "operationId": "RestartService",
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/session": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Endpoint to check if your session is still valid",
        "operationId": "SessionCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sessionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/set-policy": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Set policy",
        "operationId": "SetPolicy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setPolicyNameRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/set-policy-multi": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Set policy to multiple users/groups",
        "operationId": "SetPolicyMultiple",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setPolicyMultipleNameRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/subscription/info": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Subscription info",
        "operationId": "SubscriptionInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/license"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Get User Info",
        "operationId": "GetUserInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Update User Info",
        "operationId": "UpdateUserInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Remove user",
        "operationId": "RemoveUser",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/groups": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Update Groups for a user",
        "operationId": "UpdateUserGroups",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{name}/service-account-credentials": {
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Create Service Account for User With Credentials",
        "operationId": "CreateServiceAccountCredentials",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequestCreds"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{name}/service-accounts": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "returns a list of service accounts for a user",
        "operationId": "ListAUserServiceAccounts",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccounts"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Create Service Account for User",
        "operationId": "CreateAUserServiceAccount",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccountRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceAccountCreds"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "List Users",
        "operationId": "ListUsers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listUsersResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Add User",
        "operationId": "AddUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users-groups-bulk": {
      "put": {
        "tags": [
          "AdminAPI"
        ],
        "summary": "Bulk functionality to Add Users to Groups",
        "operationId": "BulkUpdateUsersGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulkUserGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BucketDetails": {
      "type": "object",
      "properties": {
        "locking": {
          "type": "boolean"
        },
        "quota": {
          "type": "object",
          "properties": {
            "quota": {
              "type": "integer",
              "format": "int64"
            },
            "type": {
              "type": "string",
              "enum": [
                "fifo",
                "hard"
              ]
            }
          }
        },
        "replication": {
          "type": "boolean"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "versioning": {
          "type": "boolean"
        },
        "versioningSuspended": {
          "type": "boolean"
        }
      }
    },
    "BucketDetailsQuota": {
      "type": "object",
      "properties": {
        "quota": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": [
            "fifo",
            "hard"
          ]
        }
      }
    },
    "BucketRwAccess": {
      "type": "object",
      "properties": {
        "read": {
          "type": "boolean"
        },
        "write": {
          "type": "boolean"
        }
      }
    },
    "WidgetDetailsOptions": {
      "type": "object",
      "properties": {
        "reduceOptions": {
          "type": "object",
          "properties": {
            "calcs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "WidgetDetailsOptionsReduceOptions": {
      "type": "object",
      "properties": {
        "calcs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WidgetOptions": {
      "type": "object",
      "properties": {
        "reduceOptions": {
          "type": "object",
          "properties": {
            "calcs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "WidgetOptionsReduceOptions": {
      "type": "object",
      "properties": {
        "calcs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "accessRule": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "accountChangePasswordRequest": {
      "type": "object",
      "required": [
        "current_secret_key",
        "new_secret_key"
      ],
      "properties": {
        "current_secret_key": {
          "type": "string"
        },
        "new_secret_key": {
          "type": "string"
        }
      }
    },
    "addBucketLifecycle": {
      "type": "object",
      "properties": {
        "disable": {
          "description": "Non required, toggle to disable or enable rule",
          "type": "boolean"
        },
        "expired_object_delete_marker": {
          "description": "Non required, toggle to disable or enable rule",
          "type": "boolean"
        },
        "expiry_date": {
          "description": "Required in case of expiry_days or transition fields are not set. it defines an expiry date for ILM",
          "type": "string"
        },
        "expiry_days": {
          "description": "Required in case of expiry_date or transition fields are not set. it defines an expiry days for ILM",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "noncurrentversion_expiration_days": {
          "description": "Non required, can be set in case of expiration is enabled",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "noncurrentversion_transition_days": {
          "description": "Non required, can be set in case of transition is enabled",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "noncurrentversion_transition_storage_class": {
          "description": "Non required, can be set in case of transition is enabled",
          "type": "string"
        },
        "prefix": {
          "description": "Non required field, it matches a prefix to perform ILM operations on it",
          "type": "string"
        },
        "storage_class": {
          "description": "Required only in case of transition is set. it refers to a tier",
          "type": "string"
        },
        "tags": {
          "description": "Non required field, tags to match ILM files",
          "type": "string"
        },
        "transition_date": {
          "description": "Required in case of transition_days or expiry fields are not set. it defines a transition date for ILM",
          "type": "string"
        },
        "transition_days": {
          "description": "Required in case of transition_date or expiry fields are not set. it defines a transition days for ILM",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "addBucketReplication": {
      "type": "object",
      "properties": {
        "arn": {
          "type": "string"
        },
        "destination_bucket": {
          "type": "string"
        }
      }
    },
    "addGroupRequest": {
      "type": "object",
      "required": [
        "group",
        "members"
      ],
      "properties": {
        "group": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "addPolicyRequest": {
      "type": "object",
      "required": [
        "name",
        "policy"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        }
      }
    },
    "addUserRequest": {
      "type": "object",
      "required": [
        "accessKey",
        "secretKey",
        "groups",
        "policies"
      ],
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "adminInfoResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "integer"
        },
        "objects": {
          "type": "integer"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverProperties"
          }
        },
        "usage": {
          "type": "integer"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widget"
          }
        }
      }
    },
    "arnsResponse": {
      "type": "object",
      "properties": {
        "arns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "bucket": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/bucketAccess"
        },
        "allowedActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creation_date": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "properties": {
            "locking": {
              "type": "boolean"
            },
            "quota": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "integer",
                  "format": "int64"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "fifo",
                    "hard"
                  ]
                }
              }
            },
            "replication": {
              "type": "boolean"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "versioning": {
              "type": "boolean"
            },
            "versioningSuspended": {
              "type": "boolean"
            }
          }
        },
        "manage": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 3
        },
        "objects": {
          "type": "integer",
          "format": "int64"
        },
        "rw_access": {
          "type": "object",
          "properties": {
            "read": {
              "type": "boolean"
            },
            "write": {
              "type": "boolean"
            }
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "bucketAccess": {
      "type": "string",
      "default": "PRIVATE",
      "enum": [
        "PRIVATE",
        "PUBLIC",
        "CUSTOM"
      ]
    },
    "bucketEncryptionInfo": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "kmsMasterKeyID": {
          "type": "string"
        }
      }
    },
    "bucketEncryptionRequest": {
      "type": "object",
      "properties": {
        "encType": {
          "$ref": "#/definitions/bucketEncryptionType"
        },
        "kmsKeyID": {
          "type": "string"
        }
      }
    },
    "bucketEncryptionType": {
      "type": "string",
      "default": "sse-s3",
      "enum": [
        "sse-s3",
        "sse-kms"
      ]
    },
    "bucketEventRequest": {
      "type": "object",
      "required": [
        "configuration"
      ],
      "properties": {
        "configuration": {
          "$ref": "#/definitions/notificationConfig"
        },
        "ignoreExisting": {
          "type": "boolean"
        }
      }
    },
    "bucketLifecycleResponse": {
      "type": "object",
      "properties": {
        "lifecycle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectBucketLifecycle"
          }
        }
      }
    },
    "bucketObLockingResponse": {
      "type": "object",
      "properties": {
        "object_locking_enabled": {
          "type": "boolean"
        }
      }
    },
    "bucketObject": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiration_rule_id": {
          "type": "string"
        },
        "is_delete_marker": {
          "type": "boolean"
        },
        "is_latest": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "legal_hold_status": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retention_mode": {
          "type": "string"
        },
        "retention_until_date": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "bucketQuota": {
      "type": "object",
      "properties": {
        "quota": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "hard",
            "fifo"
          ]
        }
      }
    },
    "bucketReplicationDestination": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        }
      }
    },
    "bucketReplicationResponse": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bucketReplicationRule"
          }
        }
      }
    },
    "bucketReplicationRule": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "type": "string"
        },
        "delete_marker_replication": {
          "type": "boolean"
        },
        "deletes_replication": {
          "type": "boolean"
        },
        "destination": {
          "$ref": "#/definitions/bucketReplicationDestination"
        },
        "healthCheckPeriod": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "metadata_replication": {
          "type": "boolean"
        },
        "prefix": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ]
        },
        "syncMode": {
          "type": "string",
          "default": "async",
          "enum": [
            "async",
            "sync"
          ]
        },
        "tags": {
          "type": "string"
        }
      }
    },
    "bucketVersioningResponse": {
      "type": "object",
      "properties": {
        "is_versioned": {
          "type": "boolean"
        }
      }
    },
    "bulkUserGroups": {
      "type": "object",
      "required": [
        "users",
        "groups"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "changeUserPasswordRequest": {
      "type": "object",
      "required": [
        "selectedUser",
        "newSecretKey"
      ],
      "properties": {
        "newSecretKey": {
          "type": "string"
        },
        "selectedUser": {
          "type": "string"
        }
      }
    },
    "configDescription": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "key_values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configurationKV"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "configurationKV": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "createRemoteBucket": {
      "required": [
        "accessKey",
        "secretKey",
        "targetURL",
        "sourceBucket",
        "targetBucket"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64"
        },
        "healthCheckPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "type": "string"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "sourceBucket": {
          "type": "string"
        },
        "syncMode": {
          "type": "string",
          "default": "async",
          "enum": [
            "async",
            "sync"
          ]
        },
        "targetBucket": {
          "type": "string"
        },
        "targetURL": {
          "type": "string"
        }
      }
    },
    "deleteFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "recursive": {
          "type": "boolean"
        },
        "versionID": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message",
        "detailedMessage"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "expirationResponse": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "days": {
          "type": "integer",
          "format": "int64"
        },
        "delete_marker": {
          "type": "boolean"
        }
      }
    },
    "getBucketRetentionConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        },
        "unit": {
          "$ref": "#/definitions/objectRetentionUnit"
        },
        "validity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "group": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "hasPermissionRequest": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/policyArgs"
          }
        }
      }
    },
    "hasPermissionResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/permissionAction"
          }
        }
      }
    },
    "iamEntity": {
      "type": "string",
      "pattern": "^[\\w+=,.@-]{1,64}$"
    },
    "iamPolicy": {
      "type": "object",
      "properties": {
        "statement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamPolicyStatement"
          }
        },
        "version": {
          "type": "string"
        }
      }
    },
    "iamPolicyStatement": {
      "type": "object",
      "properties": {
        "action": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "effect": {
          "type": "string"
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "license": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "expires_at": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "storage_capacity": {
          "type": "integer"
        }
      }
    },
    "lifecycleTag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "listAccessRulesResponse": {
      "type": "object",
      "properties": {
        "accessRules": {
          "type": "array",
          "title": "list of policies",
          "items": {
            "$ref": "#/definitions/accessRule"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of policies"
        }
      }
    },
    "listBucketEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/notificationConfig"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of bucket events"
        }
      }
    },
    "listBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "title": "list of resulting buckets",
          "items": {
            "$ref": "#/definitions/bucket"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of buckets accessible to the user"
        }
      }
    },
    "listConfigResponse": {
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configDescription"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of configurations"
        }
      }
    },
    "listExternalBucketsParams": {
      "required": [
        "accessKey",
        "secretKey",
        "targetURL",
        "useTLS"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "region": {
          "type": "string"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "targetURL": {
          "type": "string"
        },
        "useTLS": {
          "type": "boolean"
        }
      }
    },
    "listGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "title": "list of groups",
          "items": {
            "type": "string"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of groups"
        }
      }
    },
    "listObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "title": "list of resulting objects",
          "items": {
            "$ref": "#/definitions/bucketObject"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of objects"
        }
      }
    },
    "listPoliciesResponse": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "title": "list of policies",
          "items": {
            "$ref": "#/definitions/policy"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total number of policies"
        }
      }
    },
    "listRemoteBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "title": "list of remote buckets",
          "items": {
            "$ref": "#/definitions/remoteBucket"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of remote buckets accessible to user"
        }
      }
    },
    "listUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "title": "list of resulting users",
          "items": {
            "$ref": "#/definitions/user"
          }
        }
      }
    },
    "logSearchResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "object",
          "title": "list of log search responses"
        }
      }
    },
    "loginDetails": {
      "type": "object",
      "properties": {
        "loginStrategy": {
          "type": "string",
          "enum": [
            "form",
            "redirect",
            "service-account"
          ]
        },
        "redirect": {
          "type": "string"
        }
      }
    },
    "loginOauth2AuthRequest": {
      "type": "object",
      "required": [
        "state",
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "loginRequest": {
      "type": "object",
      "required": [
        "accessKey",
        "secretKey"
      ],
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      }
    },
    "makeBucketRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "locking": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "quota": {
          "$ref": "#/definitions/setBucketQuota"
        },
        "retention": {
          "$ref": "#/definitions/putBucketRetentionRequest"
        },
        "versioning": {
          "type": "boolean"
        }
      }
    },
    "multiBucketReplication": {
      "required": [
        "accessKey",
        "secretKey",
        "targetURL",
        "bucketsRelation"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64"
        },
        "bucketsRelation": {
          "type": "array",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/multiBucketsRelation"
          }
        },
        "healthCheckPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "replicateDeleteMarkers": {
          "type": "boolean"
        },
        "replicateDeletes": {
          "type": "boolean"
        },
        "replicateMetadata": {
          "type": "boolean"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "syncMode": {
          "type": "string",
          "default": "async",
          "enum": [
            "async",
            "sync"
          ]
        },
        "tags": {
          "type": "string"
        },
        "targetURL": {
          "type": "string"
        }
      }
    },
    "multiBucketResponseItem": {
      "type": "object",
      "properties": {
        "errorString": {
          "type": "string"
        },
        "originBucket": {
          "type": "string"
        },
        "targetBucket": {
          "type": "string"
        }
      }
    },
    "multiBucketResponseState": {
      "type": "object",
      "properties": {
        "replicationState": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/multiBucketResponseItem"
          }
        }
      }
    },
    "multiBucketsRelation": {
      "type": "object",
      "properties": {
        "destinationBucket": {
          "type": "string"
        },
        "originBucket": {
          "type": "string"
        }
      }
    },
    "nofiticationService": {
      "type": "string",
      "enum": [
        "webhook",
        "amqp",
        "kafka",
        "mqtt",
        "nats",
        "nsq",
        "mysql",
        "postgres",
        "elasticsearch",
        "redis"
      ]
    },
    "notifEndpointResponse": {
      "type": "object",
      "properties": {
        "notification_endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/notificationEndpointItem"
          }
        }
      }
    },
    "notificationConfig": {
      "type": "object",
      "required": [
        "arn"
      ],
      "properties": {
        "arn": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "title": "filter specific type of event. Defaults to all event (default: '[put,delete,get]')",
          "items": {
            "$ref": "#/definitions/notificationEventType"
          }
        },
        "id": {
          "type": "string"
        },
        "prefix": {
          "type": "string",
          "title": "filter event associated to the specified prefix"
        },
        "suffix": {
          "type": "string",
          "title": "filter event associated to the specified suffix"
        }
      }
    },
    "notificationDeleteRequest": {
      "type": "object",
      "required": [
        "events",
        "prefix",
        "suffix"
      ],
      "properties": {
        "events": {
          "type": "array",
          "title": "filter specific type of event. Defaults to all event (default: '[put,delete,get]')",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/notificationEventType"
          }
        },
        "prefix": {
          "type": "string",
          "title": "filter event associated to the specified prefix"
        },
        "suffix": {
          "type": "string",
          "title": "filter event associated to the specified suffix"
        }
      }
    },
    "notificationEndpoint": {
      "type": "object",
      "required": [
        "service",
        "account_id",
        "properties"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "service": {
          "$ref": "#/definitions/nofiticationService"
        }
      }
    },
    "notificationEndpointItem": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/nofiticationService"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "notificationEventType": {
      "type": "string",
      "enum": [
        "put",
        "delete",
        "get"
      ]
    },
    "objectBucketLifecycle": {
      "type": "object",
      "properties": {
        "expiration": {
          "$ref": "#/definitions/expirationResponse"
        },
        "id": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/lifecycleTag"
          }
        },
        "transition": {
          "$ref": "#/definitions/transitionResponse"
        }
      }
    },
    "objectLegalHoldStatus": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ]
    },
    "objectRetentionMode": {
      "type": "string",
      "enum": [
        "governance",
        "compliance"
      ]
    },
    "objectRetentionUnit": {
      "type": "string",
      "enum": [
        "days",
        "years"
      ]
    },
    "permissionAction": {
      "type": "object",
      "properties": {
        "can": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "policy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        }
      }
    },
    "policyArgs": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "bucket_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "policyEntity": {
      "type": "string",
      "default": "user",
      "enum": [
        "user",
        "group"
      ]
    },
    "prefixAccessPair": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "prefixWrapper": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "STSAccessKeyID": {
          "type": "string"
        },
        "STSSecretAccessKey": {
          "type": "string"
        },
        "STSSessionToken": {
          "type": "string"
        },
        "accountAccessKey": {
          "type": "string"
        }
      }
    },
    "profilerType": {
      "type": "string",
      "enum": [
        "cpu",
        "mem",
        "block",
        "mutex",
        "trace",
        "threads",
        "goroutines"
      ]
    },
    "profilingStartRequest": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/profilerType"
        }
      }
    },
    "putBucketRetentionRequest": {
      "type": "object",
      "required": [
        "mode",
        "unit",
        "validity"
      ],
      "properties": {
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        },
        "unit": {
          "$ref": "#/definitions/objectRetentionUnit"
        },
        "validity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "putBucketTagsRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "putObjectLegalHoldRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/objectLegalHoldStatus"
        }
      }
    },
    "putObjectRetentionRequest": {
      "type": "object",
      "required": [
        "mode",
        "expires"
      ],
      "properties": {
        "expires": {
          "type": "string"
        },
        "governance_bypass": {
          "type": "boolean"
        },
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        }
      }
    },
    "putObjectTagsRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "remoteBucket": {
      "type": "object",
      "required": [
        "accessKey",
        "sourceBucket",
        "remoteARN"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "minLength": 3
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64"
        },
        "healthCheckPeriod": {
          "type": "integer"
        },
        "remoteARN": {
          "type": "string"
        },
        "secretKey": {
          "type": "string",
          "minLength": 8
        },
        "service": {
          "type": "string",
          "enum": [
            "replication"
          ]
        },
        "sourceBucket": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "syncMode": {
          "type": "string"
        },
        "targetBucket": {
          "type": "string"
        },
        "targetURL": {
          "type": "string"
        }
      }
    },
    "resultTarget": {
      "type": "object",
      "properties": {
        "legendFormat": {
          "type": "string"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widgetResult"
          }
        },
        "resultType": {
          "type": "string"
        }
      }
    },
    "rewindItem": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "delete_flag": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "rewindResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewindItem"
          }
        }
      }
    },
    "serverDrives": {
      "type": "object",
      "properties": {
        "availableSpace": {
          "type": "integer"
        },
        "drivePath": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "healing": {
          "type": "boolean"
        },
        "model": {
          "type": "string"
        },
        "rootDisk": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer"
        },
        "usedSpace": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "serverProperties": {
      "type": "object",
      "properties": {
        "commitID": {
          "type": "string"
        },
        "drives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverDrives"
          }
        },
        "endpoint": {
          "type": "string"
        },
        "network": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "poolNumber": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "uptime": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "serviceAccountCreds": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "serviceAccountRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "type": "string",
          "title": "policy to be applied to the Service Account if any"
        }
      }
    },
    "serviceAccountRequestCreds": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "policy": {
          "type": "string",
          "title": "policy to be applied to the Service Account if any"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "serviceAccounts": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "sessionResponse": {
      "type": "object",
      "properties": {
        "distributedMode": {
          "type": "boolean"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "type": "boolean"
        },
        "pages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policy": {
          "type": "object",
          "$ref": "#/definitions/iamPolicy"
        },
        "status": {
          "type": "string",
          "enum": [
            "ok"
          ]
        }
      }
    },
    "setBucketPolicyRequest": {
      "type": "object",
      "required": [
        "access"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/bucketAccess"
        }
      }
    },
    "setBucketQuota": {
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "amount": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "quota_type": {
          "type": "string",
          "enum": [
            "fifo",
            "hard"
          ]
        }
      }
    },
    "setBucketVersioning": {
      "type": "object",
      "properties": {
        "versioning": {
          "type": "boolean"
        }
      }
    },
    "setConfigRequest": {
      "type": "object",
      "required": [
        "key_values"
      ],
      "properties": {
        "arn_resource_id": {
          "type": "string",
          "title": "Used if configuration is an event notification's target"
        },
        "key_values": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/configurationKV"
          }
        }
      }
    },
    "setConfigResponse": {
      "type": "object",
      "properties": {
        "restart": {
          "description": "Returns wheter server needs to restart to apply changes or not",
          "type": "boolean"
        }
      }
    },
    "setNotificationEndpointResponse": {
      "type": "object",
      "required": [
        "service",
        "account_id",
        "properties"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "restart": {
          "type": "boolean"
        },
        "service": {
          "$ref": "#/definitions/nofiticationService"
        }
      }
    },
    "setPolicyMultipleNameRequest": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEntity"
          }
        },
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEntity"
          }
        }
      }
    },
    "setPolicyNameRequest": {
      "type": "object",
      "required": [
        "name",
        "entityType",
        "entityName"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/policyEntity"
        },
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "setPolicyRequest": {
      "type": "object",
      "required": [
        "entityType",
        "entityName"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/policyEntity"
        }
      }
    },
    "startProfilingItem": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "startProfilingList": {
      "type": "object",
      "properties": {
        "startResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/startProfilingItem"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of start results"
        }
      }
    },
    "tier": {
      "type": "object",
      "properties": {
        "azure": {
          "type": "object",
          "$ref": "#/definitions/tier_azure"
        },
        "gcs": {
          "type": "object",
          "$ref": "#/definitions/tier_gcs"
        },
        "s3": {
          "type": "object",
          "$ref": "#/definitions/tier_s3"
        },
        "type": {
          "type": "string",
          "enum": [
            "s3",
            "gcs",
            "azure",
            "unsupported"
          ]
        }
      }
    },
    "tierCredentialsRequest": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string"
        },
        "creds": {
          "description": "a base64 encoded value",
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        }
      }
    },
    "tierListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tier"
          }
        }
      }
    },
    "tier_azure": {
      "type": "object",
      "properties": {
        "accountkey": {
          "type": "string"
        },
        "accountname": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "tier_gcs": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        },
        "creds": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "tier_s3": {
      "type": "object",
      "properties": {
        "accesskey": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "secretkey": {
          "type": "string"
        },
        "storageclass": {
          "type": "string"
        }
      }
    },
    "transitionResponse": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "days": {
          "type": "integer",
          "format": "int64"
        },
        "storage_class": {
          "type": "string"
        }
      }
    },
    "updateBucketLifecycle": {
      "type": "object",
      "properties": {
        "disable": {
          "type": "boolean"
        },
        "tags": {
          "type": "string"
        }
      }
    },
    "updateGroupRequest": {
      "type": "object",
      "required": [
        "members",
        "status"
      ],
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "updateUser": {
      "type": "object",
      "required": [
        "status",
        "groups"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "updateUserGroups": {
      "type": "object",
      "required": [
        "groups"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "hasPolicy": {
          "type": "boolean"
        },
        "memberOf": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policy": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "widget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "object",
          "properties": {
            "reduceOptions": {
              "type": "object",
              "properties": {
                "calcs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resultTarget"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "widgetDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "object",
          "properties": {
            "reduceOptions": {
              "type": "object",
              "properties": {
                "calcs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resultTarget"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "widgetResult": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {}
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "http://min.io",
      "tokenUrl": "http://min.io"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
}
